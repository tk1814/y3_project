{
  "contractName": "Meme",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "signUpUserOrLogin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_imageHash",
          "type": "bytes32"
        }
      ],
      "name": "set",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"signUpUserOrLogin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/mnt/c/Users/theod/git/y3_project/contracts/Meme.sol\":\"Meme\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/c/Users/theod/git/y3_project/contracts/Meme.sol\":{\"keccak256\":\"0x18dc48c841ab8ac71a3b9ab26f89d35d9d5148ff65abc04d8f6570f2da6428ab\",\"urls\":[\"bzz-raw://db181a3d280844ef73d021d2cc0bbe16324a14b6ffe1dd38681138e6257813b0\",\"dweb:/ipfs/QmdY8nomWSCThzoGRasqcaxGRky9hbHhDGcEa9LL1pugaU\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103ed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633e7b8e71146100465780637dc9983b14610094578063c2bc2efc1461009e575b600080fd5b6100926004803603604081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610137565b005b61009c6101a6565b005b6100e0600480360360208110156100b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102a8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610123578082015181840152602081019050610108565b505050509050019250505060405180910390f35b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166102a65760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805461024a929190610341565b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561033557602002820191906000526020600020905b815481526020019060010190808311610321575b50505050509050919050565b8280548282559060005260206000209081019282156103825760005260206000209182015b82811115610381578254825591600101919060010190610366565b5b50905061038f9190610393565b5090565b6103b591905b808211156103b1576000816000905550600101610399565b5090565b9056fea265627a7a7231582085e14809b1196ca74b6b5c619910a7c27306f0037380a1e397f7a0cb2308a05764736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633e7b8e71146100465780637dc9983b14610094578063c2bc2efc1461009e575b600080fd5b6100926004803603604081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610137565b005b61009c6101a6565b005b6100e0600480360360208110156100b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102a8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610123578082015181840152602081019050610108565b505050509050019250505060405180910390f35b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166102a65760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805461024a929190610341565b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561033557602002820191906000526020600020905b815481526020019060010190808311610321575b50505050509050919050565b8280548282559060005260206000209081019282156103825760005260206000209182015b82811115610381578254825591600101919060010190610366565b5b50905061038f9190610393565b5090565b6103b591905b808211156103b1576000816000905550600101610399565b5090565b9056fea265627a7a7231582085e14809b1196ca74b6b5c619910a7c27306f0037380a1e397f7a0cb2308a05764736f6c63430005100032",
  "sourceMap": "61:1340:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;61:1340:0;;;;;;;",
  "deployedSourceMap": "61:1340:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;61:1340:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;584:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;267:311;;;:::i;:::-;;820:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;820:130:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;820:130:0;;;;;;;;;;;;;;;;;584:172;698:10;:23;709:11;698:23;;;;;;;;;;;;;;;:35;;739:10;698:52;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;698:52:0;;;;;;;;;;;;;;;;;;;;;;584:172;;:::o;267:311::-;362:10;:22;373:10;362:22;;;;;;;;;;;;;;;:33;;;;;;;;;;;;357:150;;443:7;406:10;:22;417:10;406:22;;;;;;;;;;;;;;;:34;;:44;;;;;;;;:::i;:::-;;495:4;459:10;:22;470:10;459:22;;;;;;;;;;;;;;;:33;;;:40;;;;;;;;;;;;;;;;;;357:150;267:311::o;820:130::-;875:16;908:10;:23;919:11;908:23;;;;;;;;;;;;;;;:35;;901:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:130;;;:::o;61:1340::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.0;\r\n\r\ncontract Meme {\r\n\r\n  // array of structs \r\n  struct userData {\r\n    bytes32[] imageHashes;\r\n    bool userExists; // 0 default \r\n  }\r\n\r\n  mapping (address => userData) idUserData;\r\n\r\n  bytes32[] initArr;\r\n  function signUpUserOrLogin() public { // returns(address) {\r\n    // address _address\r\n    if (!idUserData[msg.sender].userExists) {\r\n      idUserData[msg.sender].imageHashes = initArr;\r\n      idUserData[msg.sender].userExists = true;\r\n    } // else user already exists  try catch\r\n    // return msg.sender;\r\n  }\r\n\r\n  function set(address userAddress, bytes32 _imageHash) public { \r\n    // require(userAdress in authenticated)\r\n    idUserData[userAddress].imageHashes.push(_imageHash);\r\n  }\r\n\r\n  // not passing the address resulted in mix of accounts\r\n  function get(address userAddress) public view returns (bytes32[] memory) { \r\n    return idUserData[userAddress].imageHashes; \r\n  }\r\n\r\n  // delete: reset variable to default value\r\n  // function deleteImage(address userAddress, uint index) public {\r\n  //   delete idUserData[userAddress].imageHashes[index];\r\n  // }\r\n\r\n  // bytes32[] public imageHashes;\r\n  // function set(bytes32 _imageHash) public { // abstract 0.7.0\r\n  //   imageHashes.push(_imageHash);\r\n  // }\r\n\r\n  // function get() public view returns (bytes32[] memory) { //internal dw\r\n  //   return imageHashes;\r\n  // }\r\n}",
  "sourcePath": "/mnt/c/Users/theod/git/y3_project/contracts/Meme.sol",
  "ast": {
    "absolutePath": "/mnt/c/Users/theod/git/y3_project/contracts/Meme.sol",
    "exportedSymbols": {
      "Meme": [
        73
      ]
    },
    "id": 74,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 73,
        "linearizedBaseContracts": [
          73
        ],
        "name": "Meme",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Meme.userData",
            "id": 7,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "imageHashes",
                "nodeType": "VariableDeclaration",
                "scope": 7,
                "src": "129:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "129:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "129:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "userExists",
                "nodeType": "VariableDeclaration",
                "scope": 7,
                "src": "157:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 5,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "157:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "userData",
            "nodeType": "StructDefinition",
            "scope": 73,
            "src": "106:86:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "idUserData",
            "nodeType": "VariableDeclaration",
            "scope": 73,
            "src": "198:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
              "typeString": "mapping(address => struct Meme.userData)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "207:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "198:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                "typeString": "mapping(address => struct Meme.userData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 9,
                "name": "userData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7,
                "src": "218:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_userData_$7_storage_ptr",
                  "typeString": "struct Meme.userData"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14,
            "name": "initArr",
            "nodeType": "VariableDeclaration",
            "scope": 73,
            "src": "245:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 12,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "245:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 13,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "245:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "303:275:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "361:34:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 17,
                          "name": "idUserData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "362:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                            "typeString": "mapping(address => struct Meme.userData storage ref)"
                          }
                        },
                        "id": 20,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "373:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "362:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userData_$7_storage",
                          "typeString": "struct Meme.userData storage ref"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "362:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 40,
                  "nodeType": "IfStatement",
                  "src": "357:150:0",
                  "trueBody": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "397:110:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 23,
                                "name": "idUserData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "406:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                                  "typeString": "mapping(address => struct Meme.userData storage ref)"
                                }
                              },
                              "id": 26,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 24,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "417:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 25,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "417:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "406:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userData_$7_storage",
                                "typeString": "struct Meme.userData storage ref"
                              }
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "imageHashes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "406:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "initArr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "443:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "src": "406:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 30,
                        "nodeType": "ExpressionStatement",
                        "src": "406:44:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 31,
                                "name": "idUserData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "459:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                                  "typeString": "mapping(address => struct Meme.userData storage ref)"
                                }
                              },
                              "id": 34,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 32,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "470:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "470:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "459:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userData_$7_storage",
                                "typeString": "struct Meme.userData storage ref"
                              }
                            },
                            "id": 35,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "userExists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "459:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "495:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "459:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 38,
                        "nodeType": "ExpressionStatement",
                        "src": "459:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 42,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signUpUserOrLogin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "303:0:0"
            },
            "scope": 73,
            "src": "267:311:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "645:111:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "_imageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "739:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 49,
                            "name": "idUserData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "698:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                              "typeString": "mapping(address => struct Meme.userData storage ref)"
                            }
                          },
                          "id": 51,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 50,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "709:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "698:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_userData_$7_storage",
                            "typeString": "struct Meme.userData storage ref"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "imageHashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4,
                        "src": "698:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "698:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "698:52:0"
                }
              ]
            },
            "documentation": null,
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "597:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "name": "_imageHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "618:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "596:41:0"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:0"
            },
            "scope": 73,
            "src": "584:172:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "893:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "idUserData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "908:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                          "typeString": "mapping(address => struct Meme.userData storage ref)"
                        }
                      },
                      "id": 68,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "919:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "908:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userData_$7_storage",
                        "typeString": "struct Meme.userData storage ref"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "imageHashes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4,
                    "src": "908:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 65,
                  "id": 70,
                  "nodeType": "Return",
                  "src": "901:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "833:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "832:21:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "875:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "875:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 63,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "875:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "874:18:0"
            },
            "scope": 73,
            "src": "820:130:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 74,
        "src": "61:1340:0"
      }
    ],
    "src": "33:1368:0"
  },
  "legacyAST": {
    "absolutePath": "/mnt/c/Users/theod/git/y3_project/contracts/Meme.sol",
    "exportedSymbols": {
      "Meme": [
        73
      ]
    },
    "id": 74,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 73,
        "linearizedBaseContracts": [
          73
        ],
        "name": "Meme",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Meme.userData",
            "id": 7,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "imageHashes",
                "nodeType": "VariableDeclaration",
                "scope": 7,
                "src": "129:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "129:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "129:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "userExists",
                "nodeType": "VariableDeclaration",
                "scope": 7,
                "src": "157:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 5,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "157:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "userData",
            "nodeType": "StructDefinition",
            "scope": 73,
            "src": "106:86:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "idUserData",
            "nodeType": "VariableDeclaration",
            "scope": 73,
            "src": "198:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
              "typeString": "mapping(address => struct Meme.userData)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "207:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "198:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                "typeString": "mapping(address => struct Meme.userData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 9,
                "name": "userData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7,
                "src": "218:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_userData_$7_storage_ptr",
                  "typeString": "struct Meme.userData"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14,
            "name": "initArr",
            "nodeType": "VariableDeclaration",
            "scope": 73,
            "src": "245:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 12,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "245:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 13,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "245:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "303:275:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "361:34:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 17,
                          "name": "idUserData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "362:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                            "typeString": "mapping(address => struct Meme.userData storage ref)"
                          }
                        },
                        "id": 20,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "373:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "362:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userData_$7_storage",
                          "typeString": "struct Meme.userData storage ref"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "362:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 40,
                  "nodeType": "IfStatement",
                  "src": "357:150:0",
                  "trueBody": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "397:110:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 23,
                                "name": "idUserData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "406:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                                  "typeString": "mapping(address => struct Meme.userData storage ref)"
                                }
                              },
                              "id": 26,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 24,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "417:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 25,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "417:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "406:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userData_$7_storage",
                                "typeString": "struct Meme.userData storage ref"
                              }
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "imageHashes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "406:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "initArr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "443:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "src": "406:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 30,
                        "nodeType": "ExpressionStatement",
                        "src": "406:44:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 31,
                                "name": "idUserData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "459:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                                  "typeString": "mapping(address => struct Meme.userData storage ref)"
                                }
                              },
                              "id": 34,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 32,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "470:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "470:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "459:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userData_$7_storage",
                                "typeString": "struct Meme.userData storage ref"
                              }
                            },
                            "id": 35,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "userExists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "459:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "495:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "459:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 38,
                        "nodeType": "ExpressionStatement",
                        "src": "459:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 42,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signUpUserOrLogin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "303:0:0"
            },
            "scope": 73,
            "src": "267:311:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "645:111:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "_imageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "739:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 49,
                            "name": "idUserData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "698:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                              "typeString": "mapping(address => struct Meme.userData storage ref)"
                            }
                          },
                          "id": 51,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 50,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "709:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "698:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_userData_$7_storage",
                            "typeString": "struct Meme.userData storage ref"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "imageHashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4,
                        "src": "698:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "698:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "698:52:0"
                }
              ]
            },
            "documentation": null,
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "597:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "name": "_imageHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "618:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "596:41:0"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:0"
            },
            "scope": 73,
            "src": "584:172:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "893:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "idUserData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "908:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userData_$7_storage_$",
                          "typeString": "mapping(address => struct Meme.userData storage ref)"
                        }
                      },
                      "id": 68,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "919:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "908:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userData_$7_storage",
                        "typeString": "struct Meme.userData storage ref"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "imageHashes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4,
                    "src": "908:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 65,
                  "id": 70,
                  "nodeType": "Return",
                  "src": "901:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "833:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "832:21:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "875:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "875:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 63,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "875:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "874:18:0"
            },
            "scope": 73,
            "src": "820:130:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 74,
        "src": "61:1340:0"
      }
    ],
    "src": "33:1368:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0b071073Ef1370C2ef429b6339cEF2fac88C5445",
      "transactionHash": "0xe731c4e19524e8a999b21ad03c24e4bd03d7c2ad104edf7008ab07c7564d9bc2"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-28T14:25:31.636Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}